name: Infrastructure deployment

on:
  push:
    branches:
      - tf-automation
  pull_request:

jobs:
    terraform:
        name: 'Terraform'
        runs-on: ubuntu-latest

        #env:
          #GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.TF_CREDS_GCP }}
          
        defaults:
          run:
            working-directory: ./terraform

        steps:
  
          #Changed code to use latest version of checkout action
          - name: Checkout
            uses: actions/checkout@v3

          #Setup directories on runner for GCP & AWS credentials
          - name: Directory Variable Setup
            run: |
              GCP_OUTPUT_PATH=$RUNNER_TEMP/GCP
              AWS_OUTPUT_PATH=$RUNNER_TEMP/AWS

          #Extract secrets to be used in TF from GH secrets
          - name: Credentials Setup
            env:
              GCP_CRED: ${{ secrets.TF_CREDS_GCP }}
              AWS_CONFIG: ${{ secrets.TF_CONFIG_AWS }}
              AWS_CRED: ${{ secrets.TF_CREDS_AWS }}
            run: |
              echo $GCP_CRED > $RUNNER_TEMP/credentials.json
              echo $AWS_CONFIG > $RUNNER_TEMP/config
              echo $AWS_CRED > $RUNNER_TEMP/credentials
        
          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v1

          - name: Terraform Format
            id: fmt
            run: terraform fmt -check

          - name: Terraform Init
            id: init
            run: terraform init

          - name: Terraform Validate
            id: validate
            run: terraform validate -no-color

          - name: Terraform Plan
            id: plan
            if: github.event_name == 'pull_request'
            run: terraform plan -no-color
            continue-on-error: true

          - name: Update Pull Request
            uses: actions/github-script@0.9.0
            if: github.event_name == 'pull_request'
            env:
              PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
            with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              script: |
                const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
                #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
                #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
                #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`

                <details><summary>Show Plan</summary>

                \`\`\`\n
                ${process.env.PLAN}
                \`\`\`

                </details>

                *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                })

          - name: Terraform Plan Status
            if: steps.plan.outcome == 'failure'
            run: exit 1

          - name: Terraform Apply
            if: github.ref == 'refs/heads/main' && github.event_name == 'push'
            run: terraform apply -auto-approve

